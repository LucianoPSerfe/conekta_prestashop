#!/bin/bash

# Branch on environment
BRANCH="integration"
HOST="db"
USER="magento2"
PASSWORD="magento2"
DATABASE="magento2"
PROJECT="wjq3u2cnzy72o"

# PARSE THE ARGZZ
while (( "$#" )); do
  case "$1" in
    -e|--environment|--environment=*)
      if [ "${1##--environment=}" != "$1" ]; then
        BRANCH="${1##--environment=}"
        shift
      else
        BRANCH=$2
        shift 2
      fi
      ;;
    -h|--host|--host=*)
      if [ "${1##--host=}" != "$1" ]; then
        HOST="${1##--host=}"
        shift
      else
        HOST=$2
        shift 2
      fi
      ;;
    -u|--user|--user=*)
      if [ "${1##--user=}" != "$1" ]; then
        USER="${1##--user=}"
        shift
      else
        USER=$2
        shift 2
      fi
      ;;
    -p|--password|--password=*)
      if [ "${1##--password=}" != "$1" ]; then
        PASSWORD="${1##--password=}"
        shift
      else
        PASSWORD=$2
        shift 2
      fi
      ;;
    -d|--database|--database=*)
      if [ "${1##--database=}" != "$1" ]; then
        DATABASE="${1##--datanase=}"
        shift
      else
        DATABASE=$2
        shift 2
      fi
      ;;
    -p|--project|--project=*)
      if [ "${1##--project=}" != "$1" ]; then
        PROJECT="${1##--project=}"
        shift
      else
        PROJECT=$2
        shift 2
      fi
      ;;
    --)
      shift
      break
      ;;
    -*|--*=)
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *)
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
  esac
done

set -e
echo "Imports DB from $BRANCH and set it locally";
magento-cloud db:dump -e $BRANCH -p $PROJECT --gzip -f $BRANCH.sql.gz
zcat $BRANCH.sql.gz | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\*/\*/' > $BRANCH.sql
docker-compose exec --user app phpfpm ./.serfe/db-import --host $HOST --user $USER --password $PASSWORD --database $DATABASE $BRANCH.sql
docker-compose exec --user app phpfpm ./.serfe/configure.local
rsync -azvP $(magento-cloud ssh --pipe -e $BRANCH -p $PROJECT):pub/media/ pub/media/ && true
docker-compose exec --user app phpfpm ./bin/magento setup:upgrade
docker-compose exec --user app phpfpm ./bin/magento index:reindex
docker-compose exec --user app phpfpm ./bin/magento cache:flush
