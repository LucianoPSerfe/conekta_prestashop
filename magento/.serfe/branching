#!/bin/bash
#author - Leandro Mantaras - https://www.serfe.com 

#DO NOT EDIT
#text format and color
BOLD='\e[1m';
RED='\e[31m'
GREEN='\e[32m'
NB='\e[21m'; # reset Bold
NC='\e[39m' # reset Color
NF='\e[0m' #reset to Normal - no format

#exit when detect any fails.
set -e

if [ $# -eq 0 ]
  then
    
    printf "\n${BOLD}Help>${NF} Use this command in order to create new branches with our name convention. 
    For example: ${BOLD}3456 [T] Front End - Login${NF}
     > More info https://tracker.serfe.com/wiki/doku.php?id=knowledgedb:git#branches

    In order to force creating a branch without convention name, then use ${BOLD}git branch${NF} or ${BOLD}git checkout${NF} instead.\n"

    #collect data from input
    read -rp "Enter branch name (task ID and summary): " BRANCH
  else
    BRANCH="$*"
fi

#Branch prefix check
PREFIX=$( echo $BRANCH | sed -rn 's/[^0-9]*([0-9]+).*/\1/gp')

echo -e "Ticket https://tracker.serfe.com/view.php?id=$PREFIX\n"

if [[ -z "${PREFIX//[0-9]}" && -n "$PREFIX" ]]
then
  git checkout -b `echo $BRANCH | iconv -t ascii//TRANSLIT | sed -r 's/[~\^]+//g' | sed -r 's/[^a-zA-Z0-9]+/-/g' | sed -e 's/_/-/g' | sed -r 's/^-+\|-+$//g' | tr A-Z a-z`
else
  echo -e "${RED} > Error:${NC} The branch name must start with a ticket number"
  exit 1
fi
